#include <inttypes.h>
#include <avr/pgmspace.h>

#ifndef SYSTEM4x5_H
#define SYSTEM4x5_H

#define SYSTEM4x5_WIDTH 4
#define SYSTEM4x5_HEIGHT 5

#define SystemFont4x5 System4x5

const static uint8_t System4x5[] PROGMEM = {
		0x00, 0x00, // size of zero indicates fixed width font, actual length is width * height
		0x03,				// width
		0x05,				// height
		0x20,				// first char
		0x60,				// char count

		0x00, 0x00, 0x00, // (space)
		0x00, 0x17, 0x00, // ! ok
		0x00, 0x03, 0x03, // "
		0x7F, 0x14, 0x7F, // #
		0x2A, 0x7F, 0x2A, // $
		0x13, 0x08, 0x64, // %
		0x49, 0x55, 0x22, // &
		0x00, 0x03, 0x00, // ' ok
		0x1C, 0x22, 0x41, // (
		0x41, 0x22, 0x1C, // )
		0x2A, 0x1C, 0x2A, // *
		0x04, 0x0E, 0x04, // + ok
		0x50, 0x30, 0x00, // ,
		0x04, 0x04, 0x04, // - ok
		0x60, 0x60, 0x00, // .
		0x10, 0x08, 0x04, // /
		0x0E, 0x11, 0x0E, // 0 ok
		0x12, 0x1F, 0x10, // 1 ok
		0x19, 0x15, 0x12, // 2 ok
		0x15, 0x15, 0x0E, // 3 ok
		0x0E, 0x09, 0x1C, // 4 ok
		0x16, 0x15, 0x0D, // 5 ok
		0x0E, 0x15, 0x08, // 6 ok
		0x05, 0x1F, 0x04, // 7 ok
		0x0A, 0x15, 0x0A, // 8 ok
		0x06, 0x15, 0x0E, // 9 ok
		0x00, 0x0A, 0x00, // : ok
		0x56, 0x36, 0x00, // ;
		0x08, 0x14, 0x22, // <
		0x14, 0x14, 0x14, // =
		0x22, 0x14, 0x08, // >
		0x01, 0x51, 0x09, // ?
		0x49, 0x79, 0x41, // @
		0x1E, 0x05, 0x1E, // A ok
		0x1F, 0x15, 0x0A, // B ok
		0x0E, 0x11, 0x11, // C ok
		0x1F, 0x11, 0x0E, // D ok
		0x1F, 0x15, 0x15, // E ok
		0x1F, 0x05, 0x01, // F ok
		0x0E, 0x11, 0x19, // G ok
		0x1F, 0x04, 0x1F, // H ok
		0x00, 0x1F, 0x00, // I ok
		0x08, 0x10, 0x0F, // J ok
		0x1F, 0x04, 0x1B, // K ok
		0x1F, 0x10, 0x10, // L ok
		0x1F, 0x02, 0x1F, // M ok
		0x04, 0x08, 0x10, // N
		0x0E, 0x11, 0x0E, // O ok
		0x1F, 0x05, 0x02, // P ok
		0x0E, 0x11, 0x1E, // Q ok
		0x1F, 0x05, 0x1A, // R ok
		0x12, 0x15, 0x09, // S ok
		0x01, 0x1F, 0x01, // T ok
		0x1F, 0x10, 0x1F, // U ok
		0x0F, 0x10, 0x0F, // V ok
		0x1F, 0x08, 0x1F, // W ok
		0x1B, 0x04, 0x1B, // X ok
		0x07, 0x1C, 0x07, // Y ok
		0x19, 0x15, 0x13, // Z ok
		0x00, 0x1F, 0x11, // [ ok
		0x04, 0x08, 0x10, // "\"
		0x11, 0x1F, 0x00, // ] ok
		0x02, 0x01, 0x02, // ^ ok
		0x10, 0x10, 0x10, // _ ok
		0x01, 0x02, 0x04, // `
		0x54, 0x54, 0x54, // a
		0x48, 0x44, 0x44, // b
		0x44, 0x44, 0x44, // c
		0x44, 0x44, 0x48, // d
		0x54, 0x54, 0x54, // e
		0x7E, 0x09, 0x01, // f
		0x14, 0x54, 0x54, // g
		0x08, 0x04, 0x04, // h
		0x44, 0x7D, 0x40, // i
		0x40, 0x44, 0x3D, // j
		0x7F, 0x10, 0x28, // k
		0x41, 0x7F, 0x40, // l
		0x04, 0x18, 0x04, // m
		0x08, 0x04, 0x04, // n
		0x44, 0x44, 0x44, // o
		0x14, 0x14, 0x14, // p
		0x14, 0x14, 0x18, // q
		0x08, 0x04, 0x04, // r
		0x54, 0x54, 0x54, // s
		0x3F, 0x44, 0x40, // t
		0x40, 0x40, 0x20, // u
		0x20, 0x40, 0x20, // v
		0x40, 0x30, 0x40, // w
		0x28, 0x10, 0x28, // x
		0x50, 0x50, 0x50, // y
		0x64, 0x54, 0x4C, // z
		0x04, 0x1B, 0x11, // { ok
		0x00, 0x1F, 0x00, // | ok
		0x11, 0x1B, 0x04, // } ok
		0x08, 0x2A, 0x1C, // ->
		0x1C, 0x2A, 0x08, // <-
		0x02, 0x05, 0x02 // Â°
};

#endif